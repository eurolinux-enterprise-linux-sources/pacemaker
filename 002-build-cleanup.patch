From f4305372f80faafb5a1856f68b06c4dd87f8f521 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jan=20Pokorn=C3=BD?= <jpokorny@redhat.com>
Date: Fri, 17 Jun 2016 21:47:34 +0200
Subject: [PATCH 1/3] Build: drop acinclude.m4 never ever used by pacemaker
 proper

It was rather used by the management tool being part of heartbeat
project -- pacemaker's precursor -- hence the shared codebase that
just wasn't split carefully.

[note that hearbeat also mistakenly carries that file along while
 the reason disappeared as of:
 http://hg.linux-ha.org/heartbeat-STABLE_3_0/rev/cf17a3d4167b#l1.39]
---
 acinclude.m4 | 39 ---------------------------------------
 1 file changed, 39 deletions(-)
 delete mode 100644 acinclude.m4

diff --git a/acinclude.m4 b/acinclude.m4
deleted file mode 100644
index fa8fef2..0000000
--- a/acinclude.m4
+++ /dev/null
@@ -1,39 +0,0 @@
-dnl
-dnl local autoconf/automake macros needed for heartbeat
-dnl	Started by David Lee <t.d.lee@durham.ac.uk> February 2006
-dnl
-dnl License: GNU General Public License (GPL)
-
-
-dnl AM_CHECK_PYTHON_HEADERS:  Find location of python include files.
-dnl Taken from:
-dnl	http://source.macgimp.org/
-dnl which is GPL and is attributed to James Henstridge.
-dnl
-dnl AM_CHECK_PYTHON_HEADERS([ACTION-IF-POSSIBLE], [ACTION-IF-NOT-POSSIBLE])
-dnl Imports:
-dnl	$PYTHON
-dnl Exports:
-dnl	PYTHON_INCLUDES
-
-AC_DEFUN([AM_CHECK_PYTHON_HEADERS],
-[AC_REQUIRE([AM_PATH_PYTHON])
-AC_MSG_CHECKING(for headers required to compile python extensions)
-dnl deduce PYTHON_INCLUDES
-py_prefix=`$PYTHON -c "import sys; print sys.prefix"`
-py_exec_prefix=`$PYTHON -c "import sys; print sys.exec_prefix"`
-PYTHON_INCLUDES="-I${py_prefix}/include/python${PYTHON_VERSION}"
-if test "$py_prefix" != "$py_exec_prefix"; then
-  PYTHON_INCLUDES="$PYTHON_INCLUDES -I${py_exec_prefix}/include/python${PYTHON_VERSION}"
-fi
-AC_SUBST(PYTHON_INCLUDES)
-dnl check if the headers exist:
-save_CPPFLAGS="$CPPFLAGS"
-CPPFLAGS="$CPPFLAGS $PYTHON_INCLUDES"
-AC_TRY_CPP([#include <Python.h>],dnl
-[AC_MSG_RESULT(found)
-$1],dnl
-[AC_MSG_RESULT(not found)
-$2])
-CPPFLAGS="$save_CPPFLAGS"
-])
-- 
1.8.3.1


From 4e0d5c81dae95be2bd3598d2f0dd639b64e5486a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jan=20Pokorn=C3=BD?= <jpokorny@redhat.com>
Date: Fri, 17 Jun 2016 22:59:42 +0200
Subject: [PATCH 2/3] Build: configure.ac: drop unused CC_ERRORS, move
 CC_EXTRAS

... so as not to delimit the comment and respective code with unrelated
stuff.
---
 configure.ac | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

diff --git a/configure.ac b/configure.ac
index 1a393fc..c5b30dc 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1703,10 +1703,6 @@ dnl not have CFLAGS in their environment then this should have
 dnl no effect. However if CFLAGS was exported from the user's
 dnl environment, then the new CFLAGS will also be exported
 dnl to sub processes.
-
-CC_ERRORS=""
-CC_EXTRAS=""
-
 if export | fgrep " CFLAGS=" > /dev/null; then
 	SAVED_CFLAGS="$CFLAGS"
 	unset CFLAGS
@@ -1714,6 +1710,8 @@ if export | fgrep " CFLAGS=" > /dev/null; then
 	unset SAVED_CFLAGS
 fi
 
+CC_EXTRAS=""
+
 if test "$GCC" != yes; then
         CFLAGS="$CFLAGS -g"
 	enable_fatal_warnings=no
-- 
1.8.3.1


From 9632cd73b758dd4d41c2dbf2b9f10679cc3ee1a2 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jan=20Pokorn=C3=BD?= <jpokorny@redhat.com>
Date: Tue, 21 Jun 2016 19:05:52 +0200
Subject: [PATCH 3/3] Refactor: sanitizing touch on makefiles about to receive
 hardening

* whitespace cleanup
* internally provided -D... and -I... switches belong to CPPFLAGS rather
  than CFLAGS
* use a following order of the per-target flags:
  - CPPFLAGS
  - YFLAGS
  - CFLAGS
  - LDFLAGS
  - LDADD/LIBADD
  - SOURCES

This is in part to reflect common conditional inclusion of additional
sources (which should preferably immediately follow the main SOURCES
definition) sometimes connected with extending other flags as well.
---
 attrd/Makefile.am          | 12 ++++++------
 cib/Makefile.am            | 18 +++++++++---------
 crmd/Makefile.am           | 31 +++++++++++++++----------------
 fencing/Makefile.am        | 30 ++++++++++++++++--------------
 lib/cib/Makefile.am        |  9 +++++----
 lib/cluster/Makefile.am    |  3 +--
 lib/common/Makefile.am     |  8 ++++----
 lib/fencing/Makefile.am    |  8 ++++----
 lib/lrmd/Makefile.am       | 10 +++++-----
 lib/pengine/Makefile.am    | 12 ++++++------
 lib/services/Makefile.am   | 24 ++++++++++++------------
 lib/transition/Makefile.am |  9 +++++----
 lrmd/Makefile.am           | 46 ++++++++++++++++++++++------------------------
 mcp/Makefile.am            |  4 ++--
 pengine/Makefile.am        | 16 +++++++---------
 15 files changed, 119 insertions(+), 121 deletions(-)

diff --git a/attrd/Makefile.am b/attrd/Makefile.am
index 9a841e5..a116e0e 100644
--- a/attrd/Makefile.am
+++ b/attrd/Makefile.am
@@ -17,16 +17,16 @@
 #
 include $(top_srcdir)/Makefile.common
 
-halibdir		= $(CRM_DAEMON_DIR)
-halib_PROGRAMS		= attrd
+halibdir	= $(CRM_DAEMON_DIR)
+halib_PROGRAMS	= attrd
 ## SOURCES
 
-attrd_SOURCES		=
-attrd_LDADD	= $(top_builddir)/lib/cluster/libcrmcluster.la 		\
-		$(top_builddir)/lib/common/libcrmcommon.la		\
-		$(top_builddir)/lib/cib/libcib.la			\
+attrd_LDADD	= $(top_builddir)/lib/cluster/libcrmcluster.la	\
+		$(top_builddir)/lib/common/libcrmcommon.la	\
+		$(top_builddir)/lib/cib/libcib.la		\
 		$(CLUSTERLIBS)
 
+attrd_SOURCES	=
 if BUILD_ATOMIC_ATTRD
 attrd_SOURCES	+= main.c commands.c
 else
diff --git a/cib/Makefile.am b/cib/Makefile.am
index 8508223..fcb8ce9 100644
--- a/cib/Makefile.am
+++ b/cib/Makefile.am
@@ -23,23 +23,23 @@ hadir		= $(sysconfdir)/ha.d
 halibdir	= $(CRM_DAEMON_DIR)
 commmoddir	= $(halibdir)/modules/comm
 
-COMMONLIBS	= $(top_builddir)/lib/common/libcrmcommon.la	\
-		  $(top_builddir)/lib/cib/libcib.la
+COMMONLIBS	= $(top_builddir)/lib/common/libcrmcommon.la \
+		$(top_builddir)/lib/cib/libcib.la
 
 ## binary progs
 halib_PROGRAMS	= cib cibmon
 
 ## SOURCES
-noinst_HEADERS          = callbacks.h cibio.h cibmessages.h common.h notify.h
+noinst_HEADERS	= callbacks.h cibio.h cibmessages.h common.h notify.h
 
-cib_SOURCES		= io.c messages.c notify.c	\
-			callbacks.c main.c remote.c common.c
+cib_LDADD	= $(top_builddir)/lib/cluster/libcrmcluster.la \
+		$(COMMONLIBS) $(CRYPTOLIB) $(CLUSTERLIBS)
 
-cib_LDADD		= $(top_builddir)/lib/cluster/libcrmcluster.la \
-			  $(COMMONLIBS) $(CRYPTOLIB) $(CLUSTERLIBS)
+cib_SOURCES	= io.c messages.c notify.c \
+		callbacks.c main.c remote.c common.c
 
-cibmon_SOURCES		= cibmon.c
-cibmon_LDADD		= $(COMMONLIBS)
+cibmon_LDADD	= $(COMMONLIBS)
+cibmon_SOURCES	= cibmon.c
 
 clean-generic:
 	rm -f *.log *.debug *.xml *~
diff --git a/crmd/Makefile.am b/crmd/Makefile.am
index c28da0b..979e266 100644
--- a/crmd/Makefile.am
+++ b/crmd/Makefile.am
@@ -24,20 +24,10 @@ halib_PROGRAMS	= crmd
 
 ## SOURCES
 
-noinst_HEADERS	= crmd.h crmd_fsa.h crmd_messages.h fsa_defines.h 	\
-		fsa_matrix.h fsa_proto.h crmd_utils.h crmd_callbacks.h \
+noinst_HEADERS	= crmd.h crmd_fsa.h crmd_messages.h fsa_defines.h	\
+		fsa_matrix.h fsa_proto.h crmd_utils.h crmd_callbacks.h	\
 		crmd_lrm.h te_callbacks.h tengine.h
 
-crmd_SOURCES	= main.c crmd.c corosync.c notify.c				\
-		fsa.c control.c messages.c membership.c callbacks.c		\
-		election.c join_client.c join_dc.c subsystems.c throttle.c	\
-		cib.c pengine.c tengine.c lrm.c lrm_state.c remote_lrmd_ra.c	\
-		utils.c misc.c te_events.c te_actions.c te_utils.c te_callbacks.c
-
-if BUILD_HEARTBEAT_SUPPORT
-crmd_SOURCES += heartbeat.c
-endif
-
 crmd_LDADD	= $(top_builddir)/lib/fencing/libstonithd.la		\
 		$(top_builddir)/lib/transition/libtransitioner.la	\
 		$(top_builddir)/lib/pengine/libpe_rules.la		\
@@ -45,19 +35,28 @@ crmd_LDADD	= $(top_builddir)/lib/fencing/libstonithd.la		\
 		$(top_builddir)/lib/cluster/libcrmcluster.la		\
 		$(top_builddir)/lib/common/libcrmcommon.la		\
 		$(top_builddir)/lib/services/libcrmservice.la		\
-		$(top_builddir)/lib/lrmd/liblrmd.la		\
+		$(top_builddir)/lib/lrmd/liblrmd.la			\
 		$(CLUSTERLIBS)
 
+crmd_SOURCES	= main.c crmd.c corosync.c notify.c				\
+		fsa.c control.c messages.c membership.c callbacks.c		\
+		election.c join_client.c join_dc.c subsystems.c throttle.c	\
+		cib.c pengine.c tengine.c lrm.c lrm_state.c remote_lrmd_ra.c	\
+		utils.c misc.c te_events.c te_actions.c te_utils.c te_callbacks.c
+if BUILD_HEARTBEAT_SUPPORT
+crmd_SOURCES += heartbeat.c
+endif
+
 if BUILD_XML_HELP
-man7_MANS =	crmd.7
+man7_MANS 	= crmd.7
 endif
 
-graphs:	fsa_inputs.png fsa_inputs_by_action.png fsa_actions_by_state.png
+graphs: fsa_inputs.png fsa_inputs_by_action.png fsa_actions_by_state.png
 
 %.png: %.dot
 	dot -Tpng $< > $@ 
 
-%.dot : fsa_matrix.h make_dot.pl
+%.dot: fsa_matrix.h make_dot.pl
 	perl $(top_srcdir)/crmd/make_dot.pl $(top_srcdir)/crmd/fsa_matrix.h $(top_builddir)/crmd
 
 CLEANFILES = $(man7_MANS)
diff --git a/fencing/Makefile.am b/fencing/Makefile.am
index 79fe2ed..1d591fc 100644
--- a/fencing/Makefile.am
+++ b/fencing/Makefile.am
@@ -24,13 +24,13 @@ test_SCRIPTS		= regression.py
 halibdir	= $(CRM_DAEMON_DIR)
 halib_PROGRAMS	= stonithd stonith-test
 
-sbin_PROGRAMS  = stonith_admin
-sbin_SCRIPTS   = fence_legacy fence_pcmk
+sbin_PROGRAMS	= stonith_admin
+sbin_SCRIPTS	= fence_legacy fence_pcmk
 
-noinst_HEADERS = internal.h
+noinst_HEADERS	= internal.h
 
 if BUILD_XML_HELP
-man7_MANS =	stonithd.7
+man7_MANS	= stonithd.7
 endif
 
 stonith_test_SOURCES	= test.c
@@ -49,23 +49,25 @@ stonith_admin_LDADD	= $(top_builddir)/lib/common/libcrmcommon.la	\
 			$(top_builddir)/lib/fencing/libstonithd.la	\
 			$(CRYPTOLIB) $(CLUSTERLIBS)
 
-stonithd_CFLAGS		= -I$(top_srcdir)/pengine
-stonithd_SOURCES	= main.c commands.c remote.c
-if BUILD_STONITH_CONFIG
-BUILT_SOURCES 		= standalone_config.h
-
-stonithd_SOURCES	+= standalone_config.c config.y config.l
-stonithd_AM_LFLAGS 	= -o$(LEX_OUTPUT_ROOT).c
-endif
-stonithd_YFLAGS 	= -d
+stonithd_CPPFLAGS	= -I$(top_srcdir)/pengine $(AM_CPPFLAGS)
+stonithd_YFLAGS		= -d
 
 stonithd_LDADD		= $(top_builddir)/lib/common/libcrmcommon.la	\
 			$(top_builddir)/lib/cluster/libcrmcluster.la	\
 			$(top_builddir)/lib/fencing/libstonithd.la	\
 			$(top_builddir)/lib/pengine/libpe_status.la	\
-			$(top_builddir)/pengine/libpengine.la	\
+			$(top_builddir)/pengine/libpengine.la		\
 			$(CRYPTOLIB) $(CLUSTERLIBS)
 
+stonithd_SOURCES	= main.c commands.c remote.c
+
+if BUILD_STONITH_CONFIG
+BUILT_SOURCES 		= standalone_config.h
+
+stonithd_SOURCES	+= standalone_config.c config.y config.l
+stonithd_AM_LFLAGS	= -o$(LEX_OUTPUT_ROOT).c
+endif
+
 # lex/yacc issues:
 CFLAGS			= $(CFLAGS_COPY:-Werror=)
 
diff --git a/lib/cib/Makefile.am b/lib/cib/Makefile.am
index 0c57eee..e414a7f 100644
--- a/lib/cib/Makefile.am
+++ b/lib/cib/Makefile.am
@@ -18,15 +18,16 @@
 include $(top_srcdir)/Makefile.common
 
 ## libraries
-lib_LTLIBRARIES	= libcib.la
+lib_LTLIBRARIES		= libcib.la
 
 ## SOURCES
 libcib_la_SOURCES	= cib_ops.c cib_utils.c cib_client.c cib_native.c cib_attrs.c
-libcib_la_SOURCES      += cib_file.c cib_remote.c
+libcib_la_SOURCES	+= cib_file.c cib_remote.c
 
 libcib_la_LDFLAGS	= -version-info 5:1:1
-libcib_la_LIBADD        = $(CRYPTOLIB) $(top_builddir)/lib/pengine/libpe_rules.la $(top_builddir)/lib/common/libcrmcommon.la
-libcib_la_CFLAGS	= -I$(top_srcdir)
+libcib_la_CPPFLAGS	= -I$(top_srcdir) $(AM_CPPFLAGS)
+
+libcib_la_LIBADD	= $(CRYPTOLIB) $(top_builddir)/lib/pengine/libpe_rules.la $(top_builddir)/lib/common/libcrmcommon.la
 
 clean-generic:
 	rm -f *.log *.debug *.xml *~
diff --git a/lib/cluster/Makefile.am b/lib/cluster/Makefile.am
index ffa2a73..06d7066 100644
--- a/lib/cluster/Makefile.am
+++ b/lib/cluster/Makefile.am
@@ -20,10 +20,10 @@ include $(top_srcdir)/Makefile.common
 ## libraries
 lib_LTLIBRARIES	= libcrmcluster.la 
 
-libcrmcluster_la_SOURCES = election.c cluster.c membership.c
 libcrmcluster_la_LDFLAGS = -version-info 6:0:2
 libcrmcluster_la_LIBADD  = $(top_builddir)/lib/common/libcrmcommon.la $(top_builddir)/lib/fencing/libstonithd.la $(CLUSTERLIBS)
 
+libcrmcluster_la_SOURCES = election.c cluster.c membership.c
 if BUILD_CS_SUPPORT
 libcrmcluster_la_SOURCES += cpg.c
 if BUILD_CS_PLUGIN
@@ -32,7 +32,6 @@ else
 libcrmcluster_la_SOURCES += corosync.c
 endif
 endif
-
 if BUILD_HEARTBEAT_SUPPORT
 libcrmcluster_la_SOURCES += heartbeat.c
 #libcrmcluster_la_LIBADD  += -ldl
diff --git a/lib/common/Makefile.am b/lib/common/Makefile.am
index 111628f..7550ec1 100644
--- a/lib/common/Makefile.am
+++ b/lib/common/Makefile.am
@@ -31,16 +31,16 @@ lib_LTLIBRARIES	= libcrmcommon.la
 
 CFLAGS		= $(CFLAGS_COPY:-Wcast-qual=) -fPIC
 
+libcrmcommon_la_LDFLAGS	= -version-info 9:0:6
+libcrmcommon_la_LIBADD	= @LIBADD_DL@ $(GNUTLSLIBS) -lm
+
 libcrmcommon_la_SOURCES	= compat.c digest.c ipc.c io.c procfs.c utils.c xml.c \
 			  iso8601.c remote.c mainloop.c logging.c watchdog.c \
 			  xpath.c
 if BUILD_CIBSECRETS
 libcrmcommon_la_SOURCES	+= cib_secrets.c
 endif
-
-libcrmcommon_la_LDFLAGS	= -version-info 9:0:6
-libcrmcommon_la_LIBADD  = @LIBADD_DL@ $(GNUTLSLIBS) -lm
-libcrmcommon_la_SOURCES += $(top_builddir)/lib/gnu/md5.c
+libcrmcommon_la_SOURCES	+= $(top_builddir)/lib/gnu/md5.c
 
 clean-generic:
 	rm -f *.log *.debug *.xml *~
diff --git a/lib/fencing/Makefile.am b/lib/fencing/Makefile.am
index a9f9874..85ae40a 100644
--- a/lib/fencing/Makefile.am
+++ b/lib/fencing/Makefile.am
@@ -18,8 +18,8 @@
 #
 include $(top_srcdir)/Makefile.common
 
-lib_LTLIBRARIES = libstonithd.la
+lib_LTLIBRARIES		= libstonithd.la
 
-libstonithd_la_SOURCES = st_client.c
-libstonithd_la_LDFLAGS = -version-info 4:1:2
-libstonithd_la_LIBADD = $(top_builddir)/lib/common/libcrmcommon.la
+libstonithd_la_LDFLAGS	= -version-info 4:1:2
+libstonithd_la_LIBADD	= $(top_builddir)/lib/common/libcrmcommon.la
+libstonithd_la_SOURCES	= st_client.c
diff --git a/lib/lrmd/Makefile.am b/lib/lrmd/Makefile.am
index c23fef5..25f3d55 100644
--- a/lib/lrmd/Makefile.am
+++ b/lib/lrmd/Makefile.am
@@ -16,10 +16,10 @@
 #
 include $(top_srcdir)/Makefile.common
 
-lib_LTLIBRARIES = liblrmd.la
+lib_LTLIBRARIES		= liblrmd.la
 
-liblrmd_la_SOURCES = lrmd_client.c proxy_common.c
-liblrmd_la_LDFLAGS = -version-info 4:0:3
-liblrmd_la_LIBADD = $(top_builddir)/lib/common/libcrmcommon.la	\
-			$(top_builddir)/lib/services/libcrmservice.la \
+liblrmd_la_LDFLAGS	= -version-info 4:0:3
+liblrmd_la_LIBADD	= $(top_builddir)/lib/common/libcrmcommon.la	\
+			$(top_builddir)/lib/services/libcrmservice.la	\
 			$(top_builddir)/lib/fencing/libstonithd.la
+liblrmd_la_SOURCES	= lrmd_client.c proxy_common.c
diff --git a/lib/pengine/Makefile.am b/lib/pengine/Makefile.am
index a0d19e5..de760c3 100644
--- a/lib/pengine/Makefile.am
+++ b/lib/pengine/Makefile.am
@@ -18,19 +18,19 @@
 include $(top_srcdir)/Makefile.common
 
 ## libraries
-lib_LTLIBRARIES	= libpe_rules.la libpe_status.la
+lib_LTLIBRARIES		= libpe_rules.la libpe_status.la
 
 ## SOURCES
-noinst_HEADERS	= unpack.h variant.h
+noinst_HEADERS		= unpack.h variant.h
 
 libpe_rules_la_LDFLAGS	= -version-info 2:6:0
-libpe_rules_la_SOURCES	= rules.c common.c
 libpe_rules_la_LIBADD	= $(top_builddir)/lib/common/libcrmcommon.la
+libpe_rules_la_SOURCES	= rules.c common.c
 
 libpe_status_la_LDFLAGS	= -version-info 11:0:1
-libpe_status_la_SOURCES	=  status.c unpack.c utils.c complex.c native.c \
-			   group.c clone.c rules.c common.c remote.c
-libpe_status_la_LIBADD	=  @CURSESLIBS@ $(top_builddir)/lib/common/libcrmcommon.la
+libpe_status_la_LIBADD	= @CURSESLIBS@ $(top_builddir)/lib/common/libcrmcommon.la
+libpe_status_la_SOURCES	= status.c unpack.c utils.c complex.c native.c \
+			group.c clone.c rules.c common.c remote.c
 
 clean-generic:
 	rm -f *.log *.debug *~
diff --git a/lib/services/Makefile.am b/lib/services/Makefile.am
index 2797b53..c789fbd 100644
--- a/lib/services/Makefile.am
+++ b/lib/services/Makefile.am
@@ -18,24 +18,24 @@
 
 MAINTAINERCLEANFILES = Makefile.in
 
-AM_CPPFLAGS         = -I$(top_builddir)/include
+AM_CPPFLAGS			= -I$(top_builddir)/include
 
-lib_LTLIBRARIES = libcrmservice.la
-noinst_HEADERS  = upstart.h systemd.h services_private.h
+lib_LTLIBRARIES			= libcrmservice.la
+noinst_HEADERS			= upstart.h systemd.h services_private.h
 
-libcrmservice_la_SOURCES = services.c services_linux.c
-libcrmservice_la_LDFLAGS = -version-info 4:1:1
-libcrmservice_la_CFLAGS  = $(GIO_CFLAGS) -DOCF_ROOT_DIR=\"@OCF_ROOT_DIR@\"
-libcrmservice_la_LIBADD  = $(GIO_LIBS) $(top_builddir)/lib/common/libcrmcommon.la $(DBUS_LIBS)
+libcrmservice_la_LDFLAGS	= -version-info 4:1:1
+libcrmservice_la_CPPFLAGS	= -DOCF_ROOT_DIR=\"@OCF_ROOT_DIR@\" $(AM_CPPFLAGS)
+libcrmservice_la_CFLAGS		= $(GIO_CFLAGS)
 
+libcrmservice_la_LIBADD		= $(GIO_LIBS) $(top_builddir)/lib/common/libcrmcommon.la $(DBUS_LIBS)
+
+libcrmservice_la_SOURCES	= services.c services_linux.c
 if BUILD_DBUS
-libcrmservice_la_SOURCES += dbus.c
+libcrmservice_la_SOURCES	+= dbus.c
 endif
-
 if BUILD_UPSTART
-libcrmservice_la_SOURCES += upstart.c
+libcrmservice_la_SOURCES	+= upstart.c
 endif
-
 if BUILD_SYSTEMD
-libcrmservice_la_SOURCES += systemd.c
+libcrmservice_la_SOURCES	+= systemd.c
 endif
diff --git a/lib/transition/Makefile.am b/lib/transition/Makefile.am
index 7bcfc1a..9bc039e 100644
--- a/lib/transition/Makefile.am
+++ b/lib/transition/Makefile.am
@@ -18,14 +18,15 @@
 include $(top_srcdir)/Makefile.common
 
 ## libraries
-lib_LTLIBRARIES	= libtransitioner.la
+lib_LTLIBRARIES			= libtransitioner.la
 
 ## SOURCES
-libtransitioner_la_SOURCES	= unpack.c graph.c utils.c
 
 libtransitioner_la_LDFLAGS	= -version-info 2:5:0
-libtransitioner_la_CFLAGS	= -I$(top_builddir)
-libtransitioner_la_LIBADD       = $(top_builddir)/lib/common/libcrmcommon.la
+libtransitioner_la_CPPFLAGS	= -I$(top_builddir) $(AM_CPPFLAGS)
+
+libtransitioner_la_LIBADD	= $(top_builddir)/lib/common/libcrmcommon.la
+libtransitioner_la_SOURCES	= unpack.c graph.c utils.c
 
 clean-generic:
 	rm -f *~
diff --git a/lrmd/Makefile.am b/lrmd/Makefile.am
index 556d48a..64df105 100644
--- a/lrmd/Makefile.am
+++ b/lrmd/Makefile.am
@@ -19,45 +19,43 @@ include $(top_srcdir)/Makefile.common
 testdir			= $(datadir)/$(PACKAGE)/tests/lrmd
 test_SCRIPTS		= regression.py
 
-lrmdlibdir	= $(CRM_DAEMON_DIR)
-lrmdlib_PROGRAMS = lrmd lrmd_test lrmd_internal_ctl
+lrmdlibdir		= $(CRM_DAEMON_DIR)
+lrmdlib_PROGRAMS	= lrmd lrmd_test lrmd_internal_ctl
 
-initdir		 = $(INITDIR)
-init_SCRIPTS	 = pacemaker_remote
-sbin_PROGRAMS	 = pacemaker_remoted
+initdir			= $(INITDIR)
+init_SCRIPTS		= pacemaker_remote
+sbin_PROGRAMS		= pacemaker_remoted
 
 if BUILD_SYSTEMD
-systemdunit_DATA = pacemaker_remote.service
+systemdunit_DATA	= pacemaker_remote.service
 endif
 
-lrmd_SOURCES	= main.c lrmd.c
 lrmd_LDADD		= $(top_builddir)/lib/common/libcrmcommon.la	\
-			$(top_builddir)/lib/services/libcrmservice.la \
-			$(top_builddir)/lib/lrmd/liblrmd.la  \
+			$(top_builddir)/lib/services/libcrmservice.la	\
+			$(top_builddir)/lib/lrmd/liblrmd.la		\
 			$(top_builddir)/lib/fencing/libstonithd.la ${COMPAT_LIBS}
+lrmd_SOURCES		= main.c lrmd.c
 
+pacemaker_remoted_CPPFLAGS	= -DSUPPORT_REMOTE $(AM_CPPFLAGS)
 
-pacemaker_remoted_SOURCES	= main.c lrmd.c tls_backend.c ipc_proxy.c
-pacemaker_remoted_CFLAGS	= -DSUPPORT_REMOTE
 pacemaker_remoted_LDADD		= $(lrmd_LDADD)
+pacemaker_remoted_SOURCES	= main.c lrmd.c tls_backend.c ipc_proxy.c
 
-
+lrmd_internal_ctl_LDADD		= $(top_builddir)/lib/common/libcrmcommon.la	\
+				$(top_builddir)/lib/lrmd/liblrmd.la		\
+				$(top_builddir)/lib/cib/libcib.la		\
+				$(top_builddir)/lib/services/libcrmservice.la	\
+				$(top_builddir)/lib/pengine/libpe_status.la	\
+				$(top_builddir)/pengine/libpengine.la
 lrmd_internal_ctl_SOURCES	= remote_ctl.c
-lrmd_internal_ctl_LDADD	= $(top_builddir)/lib/common/libcrmcommon.la	\
-			$(top_builddir)/lib/lrmd/liblrmd.la  \
-			$(top_builddir)/lib/cib/libcib.la   \
-			$(top_builddir)/lib/services/libcrmservice.la \
-			$(top_builddir)/lib/pengine/libpe_status.la \
-			$(top_builddir)/pengine/libpengine.la
 
-
-lrmd_test_SOURCES	= test.c
 lrmd_test_LDADD		= $(top_builddir)/lib/common/libcrmcommon.la	\
-			$(top_builddir)/lib/lrmd/liblrmd.la  \
-			$(top_builddir)/lib/cib/libcib.la   \
-			$(top_builddir)/lib/services/libcrmservice.la \
-			$(top_builddir)/lib/pengine/libpe_status.la \
+			$(top_builddir)/lib/lrmd/liblrmd.la		\
+			$(top_builddir)/lib/cib/libcib.la		\
+			$(top_builddir)/lib/services/libcrmservice.la	\
+			$(top_builddir)/lib/pengine/libpe_status.la	\
 			$(top_builddir)/pengine/libpengine.la
+lrmd_test_SOURCES	= test.c
 
 noinst_HEADERS  = lrmd_private.h
 
diff --git a/mcp/Makefile.am b/mcp/Makefile.am
index 1b3720a..195530a 100644
--- a/mcp/Makefile.am
+++ b/mcp/Makefile.am
@@ -24,16 +24,16 @@ init_SCRIPTS		= pacemaker
 sbin_PROGRAMS		= pacemakerd
 
 if BUILD_SYSTEMD
-systemdunit_DATA = pacemaker.service
+systemdunit_DATA	= pacemaker.service
 endif
 
 ## SOURCES
 
 noinst_HEADERS		= pacemaker.h
 
-pacemakerd_SOURCES	= pacemaker.c corosync.c 
 pacemakerd_LDADD	= $(top_builddir)/lib/cluster/libcrmcluster.la $(top_builddir)/lib/common/libcrmcommon.la
 pacemakerd_LDADD	+= $(CLUSTERLIBS)
+pacemakerd_SOURCES	= pacemaker.c corosync.c
 
 endif
 
diff --git a/pengine/Makefile.am b/pengine/Makefile.am
index 170b728..96c914f 100644
--- a/pengine/Makefile.am
+++ b/pengine/Makefile.am
@@ -17,7 +17,7 @@
 #
 include $(top_srcdir)/Makefile.common
 
-AM_CPPFLAGS     += -I$(top_builddir) -I$(top_srcdir)
+AM_CPPFLAGS	+= -I$(top_builddir) -I$(top_srcdir)
 
 halibdir	= $(CRM_DAEMON_DIR)
 
@@ -30,9 +30,8 @@ test_DATA		= regression.core.sh
 test10dir		= $(datadir)/$(PACKAGE)/tests/pengine/test10
 test10_DATA		= $(PE_TESTS) $(PE_TESTS:%.scores=%.xml) $(PE_TESTS:%.scores=%.exp) $(PE_TESTS:%.scores=%.dot) $(PE_TESTS:%.scores=%.summary) $(wildcard test10/*.stderr)
 
-COMMONLIBS	= 					\
-		$(top_builddir)/lib/common/libcrmcommon.la		\
-		$(top_builddir)/lib/pengine/libpe_status.la		\
+COMMONLIBS	= $(top_builddir)/lib/common/libcrmcommon.la	\
+		$(top_builddir)/lib/pengine/libpe_status.la	\
 		libpengine.la $(CURSESLIBS) $(CLUSTERLIBS)
 
 beekhof:
@@ -62,17 +61,16 @@ endif
 noinst_HEADERS	= allocate.h utils.h pengine.h
 
 libpengine_la_LDFLAGS	= -version-info 11:0:1
+libpengine_la_LIBADD	= $(top_builddir)/lib/pengine/libpe_status.la \
+			$(top_builddir)/lib/cib/libcib.la
 # -L$(top_builddir)/lib/pils -lpils -export-dynamic -module -avoid-version
 libpengine_la_SOURCES	= pengine.c allocate.c utils.c constraints.c
-libpengine_la_SOURCES  += native.c group.c clone.c master.c graph.c utilization.c
+libpengine_la_SOURCES	+= native.c group.c clone.c master.c graph.c utilization.c
 
-libpengine_la_LIBADD    = $(top_builddir)/lib/pengine/libpe_status.la \
-	$(top_builddir)/lib/cib/libcib.la
-
-pengine_SOURCES	= main.c
 pengine_LDADD	= $(top_builddir)/lib/cib/libcib.la $(COMMONLIBS)
 # libcib for get_object_root()
 #		$(top_builddir)/lib/hbclient/libhbclient.la
+pengine_SOURCES	= main.c
 
 install-exec-local:
 	$(mkinstalldirs) $(DESTDIR)/$(PE_STATE_DIR)
-- 
1.8.3.1

