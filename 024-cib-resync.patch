From 64c77a733a52474170023dad968f02317a14b1cf Mon Sep 17 00:00:00 2001
From: Ken Gaillot <kgaillot@redhat.com>
Date: Tue, 24 Jan 2017 18:25:47 -0600
Subject: [PATCH 1/2] Refactor: cib: remove dead code

CIBPIPE has been unused since 1.1.8, syncd_once apparently has never been used
---
 cib/messages.c | 33 ---------------------------------
 1 file changed, 33 deletions(-)

diff --git a/cib/messages.c b/cib/messages.c
index 65f57b1..9e73701 100644
--- a/cib/messages.c
+++ b/cib/messages.c
@@ -42,14 +42,9 @@
 
 #define MAX_DIFF_RETRY 5
 
-#ifdef CIBPIPE
-gboolean cib_is_master = TRUE;
-#else
 gboolean cib_is_master = FALSE;
-#endif
 
 xmlNode *the_cib = NULL;
-gboolean syncd_once = FALSE;
 extern const char *cib_our_uname;
 int revision_check(xmlNode * cib_update, xmlNode * cib_copy, int flags);
 int get_revision(xmlNode * xml_obj, int cur_revision);
@@ -73,9 +68,6 @@ cib_process_shutdown_req(const char *op, int options, const char *section, xmlNo
                          xmlNode * input, xmlNode * existing_cib, xmlNode ** result_cib,
                          xmlNode ** answer)
 {
-#ifdef CIBPIPE
-    return -EINVAL;
-#else
     int result = pcmk_ok;
     const char *host = crm_element_value(req, F_ORIG);
 
@@ -96,7 +88,6 @@ cib_process_shutdown_req(const char *op, int options, const char *section, xmlNo
     }
 
     return result;
-#endif
 }
 
 int
@@ -141,9 +132,6 @@ cib_process_readwrite(const char *op, int options, const char *section, xmlNode
                       xmlNode * input, xmlNode * existing_cib, xmlNode ** result_cib,
                       xmlNode ** answer)
 {
-#ifdef CIBPIPE
-    return -EINVAL;
-#else
     int result = pcmk_ok;
 
     crm_trace("Processing \"%s\" event", op);
@@ -161,8 +149,6 @@ cib_process_readwrite(const char *op, int options, const char *section, xmlNode
         if (cib_is_master == FALSE) {
             crm_info("We are now in R/W mode");
             cib_is_master = TRUE;
-            syncd_once = TRUE;
-
         } else {
             crm_debug("We are still in R/W mode");
         }
@@ -173,7 +159,6 @@ cib_process_readwrite(const char *op, int options, const char *section, xmlNode
     }
 
     return result;
-#endif
 }
 
 int sync_in_progress = 0;
@@ -197,9 +182,6 @@ int
 cib_process_ping(const char *op, int options, const char *section, xmlNode * req, xmlNode * input,
                  xmlNode * existing_cib, xmlNode ** result_cib, xmlNode ** answer)
 {
-#ifdef CIBPIPE
-    return -EINVAL;
-#else
     const char *host = crm_element_value(req, F_ORIG);
     const char *seq = crm_element_value(req, F_CIB_PING_ID);
     char *digest = calculate_xml_versioned_digest(the_cib, FALSE, TRUE, CRM_FEATURE_SET);
@@ -241,27 +223,19 @@ cib_process_ping(const char *op, int options, const char *section, xmlNode * req
     free(digest);
 
     return pcmk_ok;
-#endif
 }
 
 int
 cib_process_sync(const char *op, int options, const char *section, xmlNode * req, xmlNode * input,
                  xmlNode * existing_cib, xmlNode ** result_cib, xmlNode ** answer)
 {
-#ifdef CIBPIPE
-    return -EINVAL;
-#else
     return sync_our_cib(req, TRUE);
-#endif
 }
 
 int
 cib_process_upgrade_server(const char *op, int options, const char *section, xmlNode * req, xmlNode * input,
                            xmlNode * existing_cib, xmlNode ** result_cib, xmlNode ** answer)
 {
-#ifdef CIBPIPE
-    return -EINVAL;
-#else
     int rc = pcmk_ok;
 
     *answer = NULL;
@@ -314,7 +288,6 @@ cib_process_upgrade_server(const char *op, int options, const char *section, xml
         free_xml(scratch);
     }
     return rc;
-#endif
 }
 
 int
@@ -322,11 +295,7 @@ cib_process_sync_one(const char *op, int options, const char *section, xmlNode *
                      xmlNode * input, xmlNode * existing_cib, xmlNode ** result_cib,
                      xmlNode ** answer)
 {
-#ifdef CIBPIPE
-    return -EINVAL;
-#else
     return sync_our_cib(req, FALSE);
-#endif
 }
 
 int
@@ -524,7 +493,6 @@ check_generation(xmlNode * newCib, xmlNode * oldCib)
     return FALSE;
 }
 
-#ifndef CIBPIPE
 int
 sync_our_cib(xmlNode * request, gboolean all)
 {
@@ -575,4 +543,3 @@ sync_our_cib(xmlNode * request, gboolean all)
     free(digest);
     return result;
 }
-#endif
-- 
1.8.3.1


From 3a94d53c8dee82033a8087739b3ee3429cf2b18d Mon Sep 17 00:00:00 2001
From: Ken Gaillot <kgaillot@redhat.com>
Date: Tue, 24 Jan 2017 18:24:07 -0600
Subject: [PATCH 2/2] Low: cib: improve re-sync handling

Sync requests should reset (rather than increment) the ignored diff counter;
if we're repeatedly requesting syncs, we don't want that to count towards
ignored diffs, otherwise we just request more syncs.

Also, a3afaeff added sync requests when an update fails in legacy mode, to get
the full CIB from the master. The master shouldn't make these requests.
---
 cib/messages.c | 25 +++++++++++++------------
 1 file changed, 13 insertions(+), 12 deletions(-)

diff --git a/cib/messages.c b/cib/messages.c
index 9e73701..ff97552 100644
--- a/cib/messages.c
+++ b/cib/messages.c
@@ -40,6 +40,7 @@
 #include <cibmessages.h>
 #include <callbacks.h>
 
+/* Maximum number of diffs to ignore while waiting for a resync */
 #define MAX_DIFF_RETRY 5
 
 gboolean cib_is_master = FALSE;
@@ -161,14 +162,18 @@ cib_process_readwrite(const char *op, int options, const char *section, xmlNode
     return result;
 }
 
-int sync_in_progress = 0;
+/* Set to 1 when a sync is requested, incremented when a diff is ignored,
+ * reset to 0 when a sync is received
+ */
+static int sync_in_progress = 0;
+
 void
 send_sync_request(const char *host)
 {
     xmlNode *sync_me = create_xml_node(NULL, "sync-me");
 
-    crm_info("Requesting re-sync from peer");
-    sync_in_progress++;
+    crm_info("Requesting re-sync from %s", (host? host : "all peers"));
+    sync_in_progress = 1;
 
     crm_xml_add(sync_me, F_TYPE, "cib");
     crm_xml_add(sync_me, F_CIB_OPERATION, CIB_OP_SYNC_ONE);
@@ -305,19 +310,15 @@ cib_server_process_diff(const char *op, int options, const char *section, xmlNod
 {
     int rc = pcmk_ok;
 
-    if (cib_is_master) {
-        /* the master is never waiting for a resync */
-        sync_in_progress = 0;
-    }
-
     if (sync_in_progress > MAX_DIFF_RETRY) {
-        /* request another full-sync,
-         * the last request may have been lost
+        /* Don't ignore diffs forever; the last request may have been lost.
+         * If the diff fails, we'll ask for another full resync.
          */
         sync_in_progress = 0;
     }
 
-    if (sync_in_progress) {
+    /* The master should never ignore a diff */
+    if (sync_in_progress && !cib_is_master) {
         int diff_add_updates = 0;
         int diff_add_epoch = 0;
         int diff_add_admin_epoch = 0;
@@ -351,7 +352,7 @@ cib_server_process_diff(const char *op, int options, const char *section, xmlNod
             crm_warn("Not requesting full refresh in R/W mode");
         }
 
-    } else if(rc != pcmk_ok && cib_legacy_mode()) {
+    } else if ((rc != pcmk_ok) && !cib_is_master && cib_legacy_mode()) {
         crm_warn("Requesting full CIB refresh because update failed: %s"
                  CRM_XS " rc=%d", pcmk_strerror(rc), rc);
         xml_log_patchset(LOG_INFO, __FUNCTION__, input);
-- 
1.8.3.1

